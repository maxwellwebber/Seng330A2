HOW TO RUN:
open up the Seng330A2.vcxproj in the PATH\Seng-330-A2\Seng330A2\Seng330A2 directory with visual studio. next all you should have to do is build and run using debug.


SERIALIZATION:
I spent about 6 hours trying to get Google protocall buffers,
and about 4 different c++ libraries for JSON working until I 
finally just made my own serialization functions that wrote
the classess to files and read them from files in my own format
in seng330A2.cpp I have a save function which saves all the
classes to a file named savestate.txt. it saves them in the
following form:
CLASS_TYPE1, name: CLASS_NAME1
CLASS_TYPE2, name: CLASS_NAME2
CLASS_TYPE3, name: CLASS_NAME3
ect.
These classes are loaded with a load function also in seng330A2.cpp.

DOXYGEN:
you can see the doxygen documentation in the html folder. just
open the index.html file.

GOOGLE TEST FRAMEWORK:
for the google testing framework I think I managed to install
it correctly however I could not manage to sucsessfully run any
tests on any of the objects I created. These are the errors It 
gave me when I tried to run the commented out code in the file
unittest_A2.cpp:

LNK1120	2 unresolved externals	

LNK2019	unresolved external symbol 
"public: __thiscall MachineFactory::MachineFactory(void)" (??0MachineFactory@@QAE@XZ) referenced in function "private: virtual void __thiscall testTreadmill_treadmillPrintTest_Test::TestBody(void)" (?TestBody@testTreadmill_treadmillPrintTest_Test@@EAEXXZ)	

LNK2019	unresolved external symbol 
"public: class Machine * __thiscall MachineFactory::createMachine(enum MACHINE_TYPE)" (?createMachine@MachineFactory@@QAEPAVMachine@@W4MACHINE_TYPE@@@Z) referenced in function "private: virtual void __thiscall testTreadmill_treadmillPrintTest_Test::TestBody(void)" (?TestBody@testTreadmill_treadmillPrintTest_Test@@EAEXXZ)	

To prove I can run unittests on simpler cases like function
with simple return values, I included a header file named
Header1.h that has some simple functions that can be tested
using googles testing framework. the tests are included in a
file named unittest_A2.cpp.

To run them go to the Solution Explorer Tab on the right. then
right click the unittest_A2 and press "Debug->Start New
Instance". you might need to put a breakpoint on one of the
tests so it doesent just run and close.
